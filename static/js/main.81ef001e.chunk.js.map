{"version":3,"sources":["components/Modal/Modal.module.css","components/TodoList/TodoList.jsx","components/Filter/Filter.jsx","components/Filter/index.js","components/SignUpForm/SignUpForm.jsx","components/AddNewTodo/AddNewTodo.jsx","components/Modal/Modal.jsx","components/ArticleList/ArticleList.jsx","services/ArticlesApi/index.js","services/ArticlesApi/ArticlesApi.jsx","services/TodoApi/index.js","services/TodoApi/TodoApi.jsx","components/Searching/Searching.jsx","App.js","index.js"],"names":["module","exports","TodoList","state","todos","props","handleChange","target","name","value","type","checked","setState","console","log","this","onDeleteTodo","total","length","completed","filter","todo","className","map","id","text","onChange","toggleCompleted","Button","variant","color","onClick","Component","defaultProps","Filter","LEVEL","STATE","login","password","email","agreed","level","AddNewTodo","e","currentTarget","handleSubmit","preventDefault","onSubmit","placeholder","PureComponent","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","window","addEventListener","removeEventListener","createPortal","styles","ModalBackdrop","ModalContent","children","ArticleList","url","title","handleClick","dir","textContent","attributes","href","articles","objectID","rel","ArticlesApi","fetchArticlesWithQuery","searchQuery","axios","get","then","response","data","hits","TodoApi","fetchTodos","addTodo","post","deleteTodo","todoId","delete","updateTodo","update","patch","Searching","query","App","showModal","isLoading","error","searching","prevState","addNewTodo","todoData","shortid","generate","catch","finally","toggleModal","find","updatedTodo","articlesSearching","prevProps","visible","toLowerCase","includes","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.81ef001e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ModalBackdrop\":\"Modal_ModalBackdrop__3iFAG\",\"ModalContent\":\"Modal_ModalContent__2V-8g\"};","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n//import { Test } from './TodoList.styles';\nimport Button from \"@material-ui/core/Button\";\n\nclass TodoList extends Component {\n  state = {\n    todos: this.props.todos,\n  };\n\n  handleChange = ({ target }) => {\n    const { name, value, type, checked } = target;\n\n    this.setState({ [name]: type === \"checkbox\" ? checked : value });\n    console.log(this.state.checked);\n  };\n\n  render() {\n    const { todos, onDeleteTodo } = this.props;\n    const total = todos.length;\n    const completed = todos.filter((todo) => todo.completed).length;\n    return (\n      <div className=\"TodoListWrapper\">\n        TodoList:\n        <p>\n          total : {total} | ✅ &#8594; {completed}\n        </p>\n        <ol>\n          {todos.map(({ id, text, completed }) => (\n            <li key={id}>\n              <input\n                type=\"checkbox\"\n                name=\"completed\"\n                id=\"\"\n                checked={completed}\n                onChange={() => this.props.toggleCompleted(id)}\n              />\n              {completed ? \"✅\" : \"⛔\"} {text}&emsp;\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => onDeleteTodo(id)}\n              >\n                &#10060; Delete\n              </Button>\n            </li>\n          ))}\n        </ol>\n      </div>\n    );\n  }\n}\n\nTodoList.defaultProps = {\n  // bla: 'test',\n};\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.any.isRequired),\n  onDeleteTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n//import { Test } from './Filter.styles';\n\nconst Filter = (props) => {\n  const { filter, onChange } = props;\n  return (\n    <label>\n      Фильтр по имени\n      <input type=\"text\" value={filter} onChange={onChange} />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nFilter.defaultProps = {\n  // bla: 'test',\n};\n\nexport default Filter;\n","import Filter from './Filter';\n\nexport default Filter;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./SignUpForm.css\";\nconst LEVEL = {\n  junior: \"junior\",\n  middle: \"middle\",\n  senior: \"senior\",\n};\nconst STATE = {\n  login: \"\",\n  password: \"\",\n  email: \"\",\n  agreed: false,\n  level: null,\n};\n\nclass SignUpForm extends Component {\n  state = {\n    ...STATE,\n  };\n\n  // * Отвечает за обновление состояния\n  handleChange = ({ target }) => {\n    const { name, value, checked, type } = target;\n    // Если тип элемента checkbox, берем значение checked,\n    // в противном случае value\n    this.setState({ [name]: type === \"checkbox\" ? checked : value });\n    console.log(this.state.checked);\n  };\n\n  // * Вызывается при отправке формы\n  handleSubmit = (evt) => {\n    evt.preventDefault();\n    console.log(`Signed up as: ${this.state.login}`);\n    console.log(this.state);\n    // Проп который передается форме для вызова при сабмите\n    this.props.onSubmit({ ...this.state });\n    this.props.onClose();\n    this.setState({ ...STATE });\n  };\n\n  render() {\n    const { login, password, email, agreed, level } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            placeholder=\"Enter login\"\n            name=\"login\"\n            value={login}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label>\n          Email\n          <input\n            type=\"email\"\n            placeholder=\"Enter email\"\n            name=\"email\"\n            value={email}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label>\n          Password\n          <input\n            type=\"password\"\n            placeholder=\"Enter password\"\n            name=\"password\"\n            value={password}\n            onChange={this.handleChange}\n          />\n        </label>\n\n        <section>\n          <h2>Choose your gender</h2>\n          <label>\n            Junior\n            <input\n              type=\"radio\"\n              checked={level === LEVEL.junior}\n              name=\"level\"\n              value={LEVEL.junior}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label>\n            Middle\n            <input\n              type=\"radio\"\n              checked={level === LEVEL.middle}\n              name=\"level\"\n              value={LEVEL.middle}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label>\n            Senior\n            <input\n              type=\"radio\"\n              checked={level === LEVEL.senior}\n              name=\"level\"\n              value={LEVEL.senior}\n              onChange={this.handleChange}\n            />\n          </label>\n        </section>\n\n        <label>\n          Agree to terms\n          <input\n            name=\"agreed\"\n            type=\"checkbox\"\n            checked={agreed}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button type=\"submit\" disabled={!agreed} onClick={this.handleChange}>\n          Sign up as <b>{login}</b>\n        </button>\n      </form>\n    );\n  }\n}\nexport default SignUpForm;\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\n//import { Test } from './AddNewTodo.styles';\n\nclass AddNewTodo extends PureComponent {\n  state = {\n    text: \"\",\n  };\n\n  handleChange = (e) => {\n    this.setState({ text: e.currentTarget.value });\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state.text);\n\n    this.setState({ text: \"\" });\n  };\n  render() {\n    const { text } = this.state;\n    // console.log(\"text\", text);\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Add new todo\n          <input\n            type=\"text\"\n            name=\"text\"\n            value={text}\n            placeholder=\"Add new todo...\"\n            onChange={this.handleChange}\n          />\n        </label>\n        <button type=\"submit\">Add</button>\n      </form>\n    );\n  }\n}\n\nAddNewTodo.propTypes = {\n  // bla: PropTypes.string,\n};\n\nAddNewTodo.defaultProps = {\n  // bla: 'test',\n};\n\nexport default AddNewTodo;\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { createPortal } from \"react-dom\";\nimport styles from \"./Modal.module.css\";\n\nconst modalRoot = document.querySelector(\"#modal-root\");\n\nclass Modal extends PureComponent {\n  componentDidMount() {\n    // console.log(\"Modal componentDidMount\");\n    window.addEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    // console.log(\"Modal componentWillUnmount\");\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  handleKeyDown = (e) => {\n    if (e.code === \"Escape\") {\n      // console.log(\"Нажали ESC, нужно закрыть модалку\");\n\n      this.props.onClose();\n    }\n  };\n  handleBackdropClick = (e) => {\n    if (e.currentTarget === e.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className={styles.ModalBackdrop} onClick={this.handleBackdropClick}>\n        <div className={styles.ModalContent}>{this.props.children}</div>\n      </div>,\n      modalRoot\n    );\n  }\n}\n\nModal.propTypes = {\n  // bla: PropTypes.string,\n};\n\nModal.defaultProps = {\n  // bla: 'test',\n};\n\nexport default Modal;\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\n//import { Test } from './ArticleList.styles';\n\nclass ArticleList extends PureComponent {\n  state = {\n    url: \"\",\n    title: \"\",\n  };\n  handleClick = (e) => {\n    console.log(\"handleClick\");\n    console.dir(e.target);\n    this.setState({\n      title: e.target.textContent,\n      url: e.target.attributes.href,\n    });\n  };\n\n  render() {\n    const { articles } = this.props;\n    return (\n      <div className=\"ArticleListWrapper\">\n        <ul>\n          {articles.map(({ objectID, url, title }) => (\n            <li key={objectID} onClick={this.handleClick}>\n              <a href={url} target=\"_blank\" rel=\"noreferrer noopener\">\n                {title || \"Sorry, no title 😥\"}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nArticleList.propTypes = {\n  // bla: PropTypes.string,\n};\n\nArticleList.defaultProps = {\n  // bla: 'test',\n};\n\nexport default ArticleList;\n","import ArticlesApi from \"./ArticlesApi\";\n\nexport default ArticlesApi;\n","import axios from \"axios\";\n\nconst fetchArticlesWithQuery = (searchQuery) => {\n  return axios\n    .get(`https://hn.algolia.com/api/v1/search?query=${searchQuery}`)\n    .then((response) => response.data.hits);\n};\nexport default { fetchArticlesWithQuery };\n","import TodoApi from './TodoApi';\n\nexport default TodoApi;\n","import axios from \"axios\";\n\nconst fetchTodos = () => {\n  return axios.get(`http://localhost:3000/todos`).then(({ data }) => data);\n};\nconst addTodo = (todo) => {\n  return axios\n    .post(`http://localhost:3000/todos`, todo)\n    .then(({ data }) => data);\n};\nconst deleteTodo = (todoId) => {\n  return axios.delete(`http://localhost:3000/todos/${todoId}`);\n};\nconst updateTodo = (todoId, update) => {\n  return axios\n    .patch(`http://localhost:3000/todos/${todoId}`, update)\n    .then(({ data }) => data);\n};\nexport default { fetchTodos, addTodo, deleteTodo, updateTodo };\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\n//import { Test } from './Searching.styles';\n\nclass Searching extends PureComponent {\n  state = {\n    query: \"\",\n  };\n\n  handleChange = (e) => {\n    // console.log(e.target.value);\n    this.setState({ query: e.target.value });\n    // this.props.onSubmit(this.state.query);\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    console.log(e.target.value);\n    this.setState({ query: e.target.value });\n    this.props.onSubmit(this.state.query);\n    this.setState({ query: \"\" });\n  };\n  render() {\n    const { onSubmit } = this.props;\n    const { query } = this.state;\n    return (\n      <form onSubmit={onSubmit}>\n        <label>\n          Фильтр по имени\n          <input type=\"text\" value={query} onChange={this.handleChange} />\n        </label>\n        <button type=\"submit\">🔍</button>\n      </form>\n    );\n  }\n}\n\nSearching.propTypes = {\n  // bla: PropTypes.string,\n};\n\nSearching.defaultProps = {\n  // bla: 'test',\n};\n\nexport default Searching;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n// import Panel from \"./components/Panel\";\nimport TodoList from \"./components/TodoList/TodoList\";\nimport Filter from \"./components/Filter\";\nimport SignUpForm from \"./components/SignUpForm\";\nimport AddNewTodo from \"./components/AddNewTodo/AddNewTodo\";\nimport Modal from \"./components/Modal/Modal\";\nimport ArticleList from \"./components/ArticleList/ArticleList\";\nimport ArticlesApi from \"./services/ArticlesApi\";\nimport TodoApi from \"./services/TodoApi\";\nimport { BulletList } from \"react-content-loader\";\nimport Searching from \"./components/Searching/Searching\";\n\nimport axios from \"axios\";\nimport shortid from \"shortid\";\n\nclass App extends Component {\n  state = {\n    articles: [],\n    todos: [],\n    filter: \"\",\n    showModal: false,\n    isLoading: false,\n    error: null,\n    searching: \"\",\n  };\n  componentDidMount() {\n    this.setState({ isLoading: true });\n\n    const { searching } = this.state;\n\n    ArticlesApi.fetchArticlesWithQuery(this.state.searching)\n      .then((articles) => this.setState({ articles }))\n      .catch((error) => this.setState({ error }))\n      .finally(() => this.setState({ isLoading: false }));\n\n    // axios\n    //   .get(\"http://localhost:3000/todos/\")\n    //   .then(({ data }) => this.setState({ todos: data }))\n    TodoApi.fetchTodos()\n      .then((todos) => this.setState({ todos }))\n      .catch((error) => this.setState({ error }))\n      .finally(() => this.setState({ isLoading: false }));\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searching !== this.state.searching) {\n      ArticlesApi.fetchArticlesWithQuery(this.state.searching)\n        .then((articles) => this.setState({ articles }))\n        .catch((error) => this.setState({ error }))\n        .finally(() => this.setState({ isLoading: false }));\n    }\n  }\n\n  deleteTodo = (todoId) => {\n    // axios.delete(`http://localhost:3000/todos/${todoId}`)\n    TodoApi.deleteTodo(todoId).then(() => {\n      this.setState((prevState) => ({\n        todos: prevState.todos.filter((todo) => todo.id !== todoId),\n      }));\n    });\n  };\n\n  onChange = (e) => {\n    console.log(\"filter\", e.target.value);\n\n    this.setState({ filter: e.target.value });\n  };\n\n  handleSubmit = (data) => {\n    console.log(\"data\", data);\n\n    this.setState({ ...data });\n  };\n\n  addNewTodo = (text) => {\n    const todoData = {\n      id: shortid.generate(),\n      text,\n      completed: false,\n    };\n\n    // axios\n    //   .post(\"http://localhost:3000/todos/\", todo)\n    TodoApi.addTodo(todoData)\n      .then((todo) => {\n        this.setState(({ todos }) => ({ todos: [todo, ...todos] }));\n      })\n      .catch((error) => this.setState({ error }))\n      .finally(() => this.setState({ isLoading: false }));\n\n    this.toggleModal();\n  };\n\n  toggleCompleted = (todoId) => {\n    const todo = this.state.todos.find(({ id }) => id === todoId);\n\n    const { completed } = todo;\n\n    // axios\n    //   .patch(`http://localhost:3000/todos/${todoId}`, { completed: !completed })\n    TodoApi.updateTodo(todoId, { completed: !completed }).then(\n      (updatedTodo) => {\n        this.setState(({ todos }) => ({\n          todos: todos.map((todo) =>\n            todo.id === updatedTodo.id ? updatedTodo : todo\n          ),\n        }));\n      }\n    );\n  };\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({ showModal: !showModal }));\n  };\n  articlesSearching = (text) => {\n    this.setState({ searching: text });\n  };\n\n  render() {\n    const {\n      todos,\n      onChange,\n      filter,\n      showModal,\n      agreed,\n      articles,\n      isLoading,\n      error,\n      searching,\n    } = this.state;\n    const visible = todos.filter(({ text }) =>\n      text.toLowerCase().includes(filter.toLowerCase())\n    );\n    return (\n      <>\n        <div className=\"App\">\n          API\n          <Searching searching={searching} onSubmit={this.articlesSearching} />\n          {error && <p>Whoops, something went wrong: {error}</p>}\n          {isLoading && <BulletList />}\n          {articles.length > 0 && <ArticleList articles={articles} />}\n        </div>\n        <div className=\"App\">\n          {showModal && (\n            <Modal onClose={this.toggleModal}>\n              <button onClick={this.toggleModal}>X</button>\n              {/* <SignUpForm\n              onSubmit={this.handleSubmit}\n              onClose={this.toggleModal}\n            /> */}\n              <AddNewTodo onSubmit={this.addNewTodo} />\n            </Modal>\n          )}\n          <button className=\"button\" onClick={this.toggleModal}>\n            {showModal ? \"Close modal\" : \"Add new todo\"}\n          </button>\n\n          <header className=\"App-header\" />\n          <Filter filter={this.state.filter} onChange={this.onChange} />\n          <TodoList\n            todos={visible}\n            onDeleteTodo={this.deleteTodo}\n            toggleCompleted={this.toggleCompleted}\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}